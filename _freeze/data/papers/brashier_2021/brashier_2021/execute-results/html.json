{
  "hash": "3d411c6e04b169577deb555cb9bfec2a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Timing Matters When Correcting Fake News.\ndate: \"2021\"\nauthor: \n  - Brashier, Nadia M.\ncategories:\n  - veracity labels\nbibliography: ../../../references.bib\nnocite: |\n  @brashierTimingMattersWhen2021\ndraft: false \n---\n\n\n\n\n\n\n## Reference\n\n::: {#refs}\n:::\n\n## Intervention\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintervention_info <- tibble(\n    intervention_description = 'Two-wave panel design: In the treatment conditions, participants saw “true” and “false” tags either immediately before (prebunking), during (veracity_labels), or immediately after (debunking) reading. In the control condition, participants rated the headlines alone, with no tags. One week later, all participants judged the same 36 headlines for accuracy, this time with no veracity information. We will only consider ratings from the first wave. Study 2 is essentially a replication of Study 1, but with a new 3s intervall in the prebunking condition.',\n    intervention_selection = \"veracity_labels\",\n    intervention_selection_description = 'We will select the \"during\" (veracity_labels) condition, that is, the condition in which participants saw a headline with true/false tags. The debunking condition is relevant in the study context for long-term effects, but but should not affect ratings of the first wave, which we will look at. As for prebunking, it is unclear how this has been done, from the paper.',\n    originally_identified_treatment_effect = TRUE, \n    control_format = \"picture, source\"\n      )\n\n# display\nshow_conditions(intervention_info)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> intervention_description </th>\n   <th style=\"text-align:left;\"> intervention_selection_description </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Two-wave panel design: In the treatment conditions, participants saw “true” and “false” tags either immediately before (prebunking), during (veracity_labels), or immediately after (debunking) reading. In the control condition, participants rated the headlines alone, with no tags. One week later, all participants judged the same 36 headlines for accuracy, this time with no veracity information. We will only consider ratings from the first wave. Study 2 is essentially a replication of Study 1, but with a new 3s intervall in the prebunking condition. </td>\n   <td style=\"text-align:left;\"> We will select the &quot;during&quot; (veracity_labels) condition, that is, the condition in which participants saw a headline with true/false tags. The debunking condition is relevant in the study context for long-term effects, but but should not affect ratings of the first wave, which we will look at. As for prebunking, it is unclear how this has been done, from the paper. </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n### Notes\n\nThe authors found a positive treatment effect on news discernment for the label condition:\n\n>\"We found consistent evidence that the timing of fact-checks matters: “True” and “false” tags that appeared immediately after headlines (debunking) reduced misclassification of headlines 1 wk later by 25.3%, compared to an 8.6% reduction when tags appeared during exposure (labeling), and a 6.6% increase (Experiment 1) or 5.7% reduction (Experiment 2) when tags appeared beforehand (prebunking).\"\n\n\n## Data Cleaning\n\n### Study 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read_excel(\"brashier_2021-study_1.xlsx\", \n                                sheet = \"Sorted\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `` -> `...78`\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 78\n      P Party `CRT Correct` `Poli Knowl` Condition `A1 - Initial` `A2 - Initial`\n  <dbl> <chr>         <dbl>        <dbl> <chr>              <dbl>          <dbl>\n1 10001 Dem               1            3 Before                 2              1\n2 10002 Ind               1            1 Before                 1              1\n3 10003 Ind               5            4 Before                 1              1\n4 10004 Dem               5            2 Before                 3              1\n5 10005 Ind               5            2 Before                 1              1\n6 10006 Dem               7            4 Before                 4              1\n# ℹ 71 more variables: `A3 - Initial` <dbl>, `A4 - Initial` <dbl>,\n#   `A5 - Initial` <dbl>, `A6 - Initial` <dbl>, `A7 - Initial` <dbl>,\n#   `A8 - Initial` <dbl>, `A9 - Initial` <dbl>, `A10 - Initial` <dbl>,\n#   `A11 - Initial` <dbl>, `A12 - Initial` <dbl>, `A13 - Initial` <dbl>,\n#   `A14 - Initial` <dbl>, `A15 - Initial` <dbl>, `A16 - Initial` <dbl>,\n#   `A17 - Initial` <dbl>, `A18 - Initial` <dbl>, `B1 - Initial` <dbl>,\n#   `B2 - Initial` <dbl>, `B3 - Initial` <dbl>, `B4 - Initial` <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n#### `accuracy_raw`, `veracity`\n\nThe data comes in wide format, with one column per headline. We first change this to long format. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gather the wide columns into long format\ndata_long <- d |> \n  pivot_longer(\n    cols = matches(\"^(A|B)[0-9]+\\\\s-\\\\s(Initial|Final)$\"),\n    names_to = c(\"prefix\", \"item\", \"time\"),\n    names_pattern = \"(A|B)([0-9]+) - (Initial|Final)\",\n    values_to = \"accuracy\"\n  )\n```\n:::\n\n\n\n\nFrom the stata code provided by the authors, we know that variables preceded by \"A\" are false news, and those preceded by \"B\" are true news. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(\n    veracity = if_else(prefix == \"A\", \"false\", \"true\")\n    )\n\n# plausibility check\n# data_long |> \n#   group_by(veracity) |> \n#   summarise(mean_accuracy = mean(accuracy, na.rm=TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$accuracy, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    0     1     2     3     4  <NA> \n    1 42563 14404 23738 25926  9432 \n```\n\n\n:::\n:::\n\n\n\n\nOne person gave an accuracy rating of `0`. This is likely a coding error, we'll remove this observation.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  filter(accuracy != 0) |> \n  mutate(accuracy_raw = accuracy)\n```\n:::\n\n\n\n\n#### `news_id`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$item)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n   1   10   11   12   13   14   15   16   17   18    2    3    4    5    6    7 \n5924 5924 5924 5924 5924 5924 5924 5924 5924 5924 5924 5924 5924 5924 5923 5924 \n   8    9 \n5924 5924 \n```\n\n\n:::\n:::\n\n\n\n\nThere are only 18 different item identifiers. That is presumably, because these numbers only identify items within each veracity category. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long |> \n  group_by(veracity) |> \n  summarise(n_distinct(item))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  veracity `n_distinct(item)`\n  <chr>                 <int>\n1 false                    18\n2 true                     18\n```\n\n\n:::\n:::\n\n\n\n\nFor our news identifier, we therefore combine the veracity variable with these identifiers. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(news_id = paste0(veracity, \"_\", item))\n```\n:::\n\n\n\n\n#### Time point\n\nTwo-wave panel design: In the treatment conditions, participants saw “true” and “false” tags immediately before, during, or immediately after reading. In the control condition, participants rated the headlines alone, with no tags. One week later, all participants judged the same 36 headlines for accuracy, this time with no veracity information.\n\nIn our study, we want to exclude the ratings at the second time point (\"Final\"), because previous exposure to the headlines would make the results not comparable with other studies, where participants haven't been (at least in a study context) exposed to the headlines previously. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Final Initial \n  48600   58031 \n```\n\n\n:::\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  filter(time == \"Initial\")\n```\n:::\n\n\n\n\n#### Concordance (`concordance`, `partisan_identity`, `news_slant`)\n\nFrom the stata code, we know the political slant of the headlines. We combine this with participants partisan identity to code concordance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Then code whether the headline is pro-Democratic:\npro_democrat_items <- c(2, 6, 9, 11, 13, 14, 15, 17, 18, 19, 21, 26, 27, 30, 31, 33, 34, 36)\n\ndata_long <- data_long |> \n  mutate(\n    news_slant = ifelse(news_id %in% pro_democrat_items, \"democrat\", \"republican\"),\n    partisan_identity = case_when(\n      Party == \"Dem\" ~ \"democrat\", \n      Party == \"Repub\" ~ \"republican\", \n      TRUE ~ NA_character_), \n    # Make concordance variable\n    concordance = ifelse(partisan_identity == news_slant, \"concordant\", \"discordant\")\n    )\n```\n:::\n\n\n\n\n\n#### Conditions (`intervention_label`, `condition`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long |> \n  distinct(Condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 1\n  Condition\n  <chr>    \n1 Before   \n2 During   \n3 After    \n4 Control  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(intervention_label = case_when(\n           Condition == \"Before\" ~ \"prebunking\", \n           Condition == \"During\" ~ \"veracity_labels\", \n           Condition == \"After\" ~ \"debunking\", \n           TRUE ~ NA_character_\n         ),\n         condition = ifelse(Condition == \"Control\", \"control\", \"treatment\")) \n\n#check\ntable(data_long$intervention_label, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      debunking      prebunking veracity_labels            <NA> \n          14580           14544           14291           14616 \n```\n\n\n:::\n:::\n\n\n\n\n#### `age`\n\nThere is no age variable in the data. \n\n#### `year`\n\nThere is no date variable in the data. It's not clear from the paper, the supplement, or the pre-registraiton when the data has been collected. We have to rely on the publication date.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(year = 2021)\n```\n:::\n\n\n\n\n#### `scale`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$accuracy_raw, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    1     2     3     4  <NA> \n22571  7442 12455 15563     0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |>\n  mutate(scale = 4)\n```\n:::\n\n\n\n\n#### Identifiers (`subject_id`, `experiment_id`) \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd1 <- data_long |> \n  mutate(subject_id = P, \n         experiment_id = 1) \n```\n:::\n\n\n\n\n\n### Study 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- read_excel(\"brashier_2021-study_2.xlsx\", \n                                sheet = \"Sorted\")\nhead(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 77\n      P Party `CRT Correct` `Poli Knowl` Condition `A1 - Initial` `A2 - Initial`\n  <dbl> <chr>         <dbl>        <dbl> <chr>              <dbl>          <dbl>\n1 20001 Dem               2            3 Before                 1              1\n2 20002 Ind               2            5 Before                 1              1\n3 20003 Dem               0            3 Before                 2              1\n4 20004 Ind               4            5 Before                 1              1\n5 20005 Dem               5            4 Before                 1              2\n6 20006 Repub             7            5 Before                 1              1\n# ℹ 70 more variables: `A3 - Initial` <dbl>, `A4 - Initial` <dbl>,\n#   `A5 - Initial` <dbl>, `A6 - Initial` <dbl>, `A7 - Initial` <dbl>,\n#   `A8 - Initial` <dbl>, `A9 - Initial` <dbl>, `A10 - Initial` <dbl>,\n#   `A11 - Initial` <dbl>, `A12 - Initial` <dbl>, `A13 - Initial` <dbl>,\n#   `A14 - Initial` <dbl>, `A15 - Initial` <dbl>, `A16 - Initial` <dbl>,\n#   `A17 - Initial` <dbl>, `A18 - Initial` <dbl>, `B1 - Initial` <dbl>,\n#   `B2 - Initial` <dbl>, `B3 - Initial` <dbl>, `B4 - Initial` <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n\n#### `accuracy_raw`, `veracity`\n\nThe data comes in wide format, with one column per headline. We first change this to long format. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gather the wide columns into long format\ndata_long <- d |> \n  pivot_longer(\n    cols = matches(\"^(A|B)[0-9]+\\\\s-\\\\s(Initial|Final)$\"),\n    names_to = c(\"prefix\", \"item\", \"time\"),\n    names_pattern = \"(A|B)([0-9]+) - (Initial|Final)\",\n    values_to = \"accuracy\"\n  )\n```\n:::\n\n\n\n\nFrom the stata code provided by the authors, we know that variables preceeded by \"A\" are false news, and those preceeded by \"B\" are true news. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(\n    veracity = if_else(prefix == \"A\", \"false\", \"true\")\n    )\n\n# plausibility check\n# data_long |> \n#   group_by(veracity) |> \n#   summarise(mean_accuracy = mean(accuracy, na.rm=TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$accuracy, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    0     1     2     3     4  <NA> \n   31 40700 14322 25513 27038 11628 \n```\n\n\n:::\n:::\n\n\n\n\nThis time, 31 people gave an accuracy rating of `0`. Again, this is likely a coding error, and we'll remove these observations.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  filter(accuracy != 0) |> \n  mutate(accuracy_raw = accuracy)\n```\n:::\n\n\n\n\n#### `news_id`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(news_id = paste0(veracity, \"_\", item))\n```\n:::\n\n\n\n\n#### Time point\n\nAs before, we want to exclude the ratings at the second time point (\"Final\").\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  Final Initial \n  47988   59585 \n```\n\n\n:::\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  filter(time == \"Initial\")\n```\n:::\n\n\n\n\n#### Concordance (`concordance`, `partisan_identity`, `news_slant`)\n\nFrom the stata code, we know the political slant of the headlines. We combine this with participants partisan identity to code concordance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Then code whether the headline is pro-Democratic:\npro_democrat_items <- c(2, 6, 9, 11, 13, 14, 15, 17, 18, 19, 21, 26, 27, 30, 31, 33, 34, 36)\n\ndata_long <- data_long |> \n  mutate(\n    news_slant = ifelse(news_id %in% pro_democrat_items, \"democrat\", \"republican\"),\n    partisan_identity = case_when(\n      Party == \"Dem\" ~ \"democrat\", \n      Party == \"Repub\" ~ \"republican\", \n      TRUE ~ NA_character_), \n    # Make concordance variable\n    concordance = ifelse(partisan_identity == news_slant, \"concordant\", \"discordant\")\n    )\n```\n:::\n\n\n\n\n#### Conditions (`intervention_label`, `condition`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long |> \n  distinct(Condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 1\n  Condition\n  <chr>    \n1 Before   \n2 During   \n3 After    \n4 Control  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(intervention_label = case_when(\n           Condition == \"Before\" ~ \"prebunking\", \n           Condition == \"During\" ~ \"veracity_labels\", \n           Condition == \"After\" ~ \"debunking\", \n           TRUE ~ NA_character_\n         ),\n         condition = ifelse(Condition == \"Control\", \"control\", \"treatment\")) \n```\n:::\n\n\n\n\n#### `age`\n\nThere is no age variable in the data. \n\n#### `year`\n\nThere is no date variable in the data. It's not clear from the paper, the supplement, or the pre-registraiton when the data has been collected. We have to rely on the publication date.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |> \n  mutate(year = 2021)\n```\n:::\n\n\n\n\n#### `scale`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(data_long$accuracy_raw, useNA = \"always\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    1     2     3     4  <NA> \n21810  7705 13961 16109     0 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_long <- data_long |>\n  mutate(scale = 4)\n```\n:::\n\n\n\n\n#### Identifiers (`subject_id`, `experiment_id`) \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd2 <- data_long |> \n  mutate(subject_id = P, \n         experiment_id = 2) \n```\n:::\n\n\n\n\n### Combine and add identifiers (`country`, `paper_id`)\n\nWe combine both studies. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Combine + add remaining variables\nbrashier_2021 <- bind_rows(d1, d2) |> \n  mutate(country = \"United States\",\n         paper_id = \"brashier_2021\") |> \n  # add_intervention_info \n  bind_cols(intervention_info) |> \n  select(any_of(target_variables))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `...78` -> `...6`\n```\n\n\n:::\n\n```{.r .cell-code}\n# check\n# brashier_2021 |>\n#   group_by(paper_id, experiment_id) |>\n#   summarize(n_observations = n()) \n```\n:::\n\n\n\n\nSince in both studies the same news have been used (with the same labels), we can just keep the labels\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrashier_2021 |> \n  group_by(news_id) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 36 × 2\n# Groups:   news_id [36]\n   news_id      n\n   <chr>    <int>\n 1 false_1   3267\n 2 false_10  3267\n 3 false_11  3268\n 4 false_12  3267\n 5 false_13  3266\n 6 false_14  3267\n 7 false_15  3268\n 8 false_16  3266\n 9 false_17  3266\n10 false_18  3268\n# ℹ 26 more rows\n```\n\n\n:::\n:::\n\n\n\n\n#### `news_selection`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Combine + add remaining variables\nbrashier_2021 <- brashier_2021 |> \n  mutate(news_selection = \"researchers\") \n```\n:::\n\n\n\n\n## Write out data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsave_data(brashier_2021)\n```\n:::\n",
    "supporting": [
      "brashier_2021_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}